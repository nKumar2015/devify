#!/usr/bin/env bash

device_name=$1
# remove underscores for device IDs
if [[ "$device_name" == *":"* ]]; then
  # keep device type prefix intact
  device_name="${device_name%:*}:$(echo "${device_name#*:}" | tr '_' ' ')"
else
  device_name="${device_name//_/ }"
fi

status=$2
icon_pack=/usr/share/icons/MonoDev
sound_pack=/usr/share/sounds/MonoDev
user=$(who | head -n 1 | awk '{print $1}')
uid=$( id -u "$user" )
wal_dir=/home/$user/.cache/wal/colors
icon_color=$(grep -oP '#.*([A-Za-z]|[0-9])' $icon_pack/main_color.svg)
POWER_ADAPTER_STATUS="/var/run/devify_power_adapter_status"

DBUS_SESSION_BUS_ADDRESS=unix:path="/run/user/$uid/bus"
export DBUS_SESSION_BUS_ADDRESS
# required by Libcanberra
XDG_RUNTIME_DIR=/run/user/$uid
export XDG_RUNTIME_DIR
export DISPLAY=:0
export WAYLAND_DISPLAY=wayland-0

notify() {
  if [ "$status" == "add" ]; then
    su "$user" -c "canberra-gtk-play -f ${sound_pack}/add.oga -i 'Devify' -d 'Connected'" &
    su "$user" -c "notify-send -u low --hint=string:desktop-entry:devify -i ${icon_pack}/$2.svg -a Devify '$1' 'Connected'"
  fi

  if [ "$status" == "remove" ]; then
    su "$user" -c "canberra-gtk-play -f ${sound_pack}/remove.oga -i 'Devify' -d 'Disconnected'" &
    su "$user" -c "notify-send -u low --hint=string:desktop-entry:devify -i ${icon_pack}/$2.svg -a Devify '$1' 'Disconnected'"
  fi
}

# Change color by pywall

if test -f "$wal_dir"; then
  color=$(sed -n 3p "$wal_dir")
  if [ "$color" != "$icon_color" ]; then
    for i in "$icon_pack"/*; do
      sed -i "s/fill=\"#.*\"/fill=\"$color\"/g" "$i"
    done
  fi
fi

shopt -s nocasematch
case "$device_name" in
  *"DualSense"*)
    notify "PS5 Controller" "ps5_controller"
    ;;
  *"DualShock"*)
    notify "PS4 Controller" "ps4_controller"
    ;;
  *"Pro Controller"*)
    notify "Pro Controller" "switch_pro_controller"
    ;;
  *"Katar"*)
    notify "$device_name" "corsair"
    ;;
  *"Keyboard"*)
    notify "$device_name" "generic_keyboard"
    ;;
  *"Mouse"* | *"Logitech MX"* | *"MX Master"*)
    notify "$device_name" "generic_mouse"
    ;;
  *"X-Box"* | *"Xbox"*)
    notify "Xbox Controller" "xbox_controller"
    ;;
  *"Yubico Yubikey"*)
    notify "Yubikey" "yubikey"
    ;;
  *"Cam"*)
    notify "Webcam" "webcam"
    ;;
  *"removable_drive"*)
    # remove custom prefix set from udev rule
    device_name=${device_name#*:}
    notify "$device_name" "removable_drive"
    ;;
  *"android_device"*)
    device_name=${device_name#*:}
    notify "$device_name" "android"
    ;;
  *"serial_device"*)
    device_name=${device_name#*:}
    # special serial device definitions here
    case "$device_name" in
      *"Arduino"*)
        notify "$device_name" "arduino"
        ;;
      *)
        notify "$device_name" "generic_serial"
        ;;
    esac
    ;;
  *"power_adapter"*)
    device_name=${device_name#*:}
    # keep track of the online status because the rule may be triggered multiple times
    if [ "$status" == "add" ]; then
        if ! test -f "$POWER_ADAPTER_STATUS" || [ "$(cat $POWER_ADAPTER_STATUS)" == "0" ]; then
            echo "1" > "$POWER_ADAPTER_STATUS"
            notify "$device_name" "power_adapter_in"
        fi
    elif [ "$status" == "remove" ]; then
        if ! test -f "$POWER_ADAPTER_STATUS" || [ "$(cat $POWER_ADAPTER_STATUS)" == "1" ]; then
            echo "0" > "$POWER_ADAPTER_STATUS"
            notify "$device_name" "power_adapter_out"
        fi
    fi
    ;;
  *"sound_card"*)
    device_name=${device_name#*:}
    notify "$device_name" "sound_card"
    ;;
  *"network_adapter"*)
    device_name=${device_name#*:}
    notify "$device_name" "network_adapter"
    ;;
  *)
    safe_name=$(echo "$device_name" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]_-')
    notify "$device_name" "custom_$safe_name"
  ;;
esac
